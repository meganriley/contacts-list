{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ContactCard","props","useState","showAge","setShowAge","className","src","avatar","alt","name","email","onClick","age","App","contacts","setContacts","useEffect","fetch","then","response","json","data","results","map","contact","picture","large","first","last","dob","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA8BMA,EAAc,SAAAC,GAClB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKC,IAAKL,EAAMM,OAAQC,IAAI,YAC5B,sBAAKH,UAAU,eAAf,UACE,uCAAUJ,EAAMQ,QAChB,wCAAWR,EAAMS,SACjB,wBAAQC,QAAS,kBAAMP,GAAYD,IAAnC,wBAGCA,GAAW,sCAASF,EAAMW,cAMpBC,EA5CH,WACV,MAAgCX,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KAUA,OARAC,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJN,EAAYM,EAAKC,cAEpB,IAGD,mCACGR,EAASS,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CACEjB,OAAQiB,EAAQC,QAAQC,MACxBjB,KAAMe,EAAQf,KAAKkB,MAAQ,IAAMH,EAAQf,KAAKmB,KAC9ClB,MAAOc,EAAQd,MACfE,IAAKY,EAAQK,IAAIjB,YCXZkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.64945236.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./styles.css\";\n\n\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?results=3\")\n      .then(response => response.json())\n      .then(data => {\n        setContacts(data.results);\n      });\n  }, []);\n\n  return (\n    <>\n      {contacts.map(contact => (\n        <ContactCard\n          avatar={contact.picture.large}\n          name={contact.name.first + \" \" + contact.name.last}\n          email={contact.email}\n          age={contact.dob.age}\n        />\n      ))}\n    </>\n  );\n};\n\nconst ContactCard = props => {\n  const [showAge, setShowAge] = useState(false);\n  \n\n  return (\n    <div className=\"contact-card\">\n      <img src={props.avatar} alt=\"profile\" />\n      <div className=\"user-details\">\n        <p>Name: {props.name}</p>\n        <p>Email: {props.email}</p>\n        <button onClick={() => setShowAge(!showAge)}>\n\t\t\tToggle Age \n\t\t</button>\n        {showAge && <p>Age: {props.age}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}